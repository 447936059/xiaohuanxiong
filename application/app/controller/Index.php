<?php


namespace app\app\controller;

use think\Db;

class Index extends Base
{
    protected $bookService;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->bookService = new \app\service\BookService();
    }

    public function index()
    {
        $banners = cache('banners_homepage');
        if (!$banners) {
            $banners = Db::query('SELECT * FROM xwx_banner WHERE id >= 
((SELECT MAX(id) FROM xwx_banner)-(SELECT MIN(id) FROM xwx_banner)) * RAND() + (SELECT MIN(id) FROM xwx_banner) LIMIT 5');
            cache('banners_homepage', $banners, null, 'redis');
        }

        $redis = new_redis();
        $hots = $redis->zRevRange($this->redis_prefix . 'hot_books', 0, 12, true);
        $hot_books = array();
        foreach ($hots as $k => $v) {
            $hot_books[] = json_decode($k, true);
        }

        $newest = cache('newest_homepage');
        if (!$newest) {
            $newest = $this->bookService->getBooks('last_time', '1=1', 14);
            cache('newest_homepage', $newest, null, 'redis');
        }

        $ends = cache('ends_homepage');
        if (!$ends) {
            $ends = $this->bookService->getBooks('create_time', [['end', '=', '1']], 14);
            cache('ends_homepage', $ends, null, 'redis');
        }

        $most_charged = cache('most_charged');
        if (!$most_charged) {
            $arr = $this->bookService->getMostChargedBook();
            foreach ($arr as $item) {
                $most_charged[] = $item['book'];
            }
            cache('most_charged', $most_charged, null, 'redis');
        }

        $result = [
            'success' => 1,
            'data' => [
                'banners' => $banners,
                'banners_count' => count($banners),
                'newest' => $newest,
                'hot' => $hot_books,
                'ends' => $ends,
                'most_charged' => $most_charged
            ]
        ];
        return json($result);
    }


}